/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.*;
import components.pole;
import javax.swing.JOptionPane;

public class airportForm extends javax.swing.JFrame {
    private airport curAirport;
    /**
     * Creates new form airportForm
     */
    public airportForm(airport newCurAirport) {
        super(newCurAirport.getAirportsName());
        curAirport=newCurAirport;
        initComponents();
    }
    public airportForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jButtonAll = new javax.swing.JButton();
        jButtonPasseng = new javax.swing.JButton();
        jButtonGood = new javax.swing.JButton();
        jButtonWar = new javax.swing.JButton();
        jButtonPleasure = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField1.setText("100:100");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Координаты аэропорта:");
        jLabel1.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Тип:");
        jLabel2.setEnabled(false);

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextField2.setText("Общий");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Количество стоянок:");
        jLabel3.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Занято:");
        jLabel4.setEnabled(false);

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextField3.setText("jTextField3");

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextField4.setText("jTextField4");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Показать следующий тип самолетов:");

        jButtonAll.setText("Все самолеты");
        jButtonAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAllActionPerformed(evt);
            }
        });

        jButtonPasseng.setText("Только пассажирские");
        jButtonPasseng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPassengActionPerformed(evt);
            }
        });

        jButtonGood.setText("Только грузовые");
        jButtonGood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGoodActionPerformed(evt);
            }
        });

        jButtonWar.setText("Только военные");
        jButtonWar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWarActionPerformed(evt);
            }
        });

        jButtonPleasure.setText("Только прогулочные");
        jButtonPleasure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPleasureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonAll)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonPasseng)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonGood)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonWar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jButtonPleasure)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAll)
                    .addComponent(jButtonPasseng)
                    .addComponent(jButtonGood)
                    .addComponent(jButtonWar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPleasure)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Vector<pole> textPlanes;
    private Vector <basicPlane> parkingPlanes;
    private String[] colHeaders = new String[]{"Название", "Тип", "Масса", "Остаточное время стоянки"};
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jTextField1.setText(Integer.toString(curAirport.getCoordX())+ ";" + Integer.toString(curAirport.getCoordY()));
        if (curAirport.getAirportType()==1) {
            jTextField2.setText("Военный");
            jButtonGood.setEnabled(false);
            jButtonPasseng.setEnabled(false);
            jButtonPleasure.setEnabled(false);
        }
        jTextField3.setText(Integer.toString(curAirport.getParkingPlacesNumber()));
        parkingPlanes=curAirport.getParkingPlanes();
        int planesNumber=parkingPlanes.size();
        jTextField4.setText(Integer.toString(planesNumber));
        textPlanes = new Vector<pole>();
        String[] tekInfo = new String[colHeaders.length];
        for (basicPlane bp : parkingPlanes) {
            tekInfo[0]=bp.getName();
            tekInfo[2]=Integer.toString(bp.getWeight());
            tekInfo[3]=Integer.toString(bp.getStopTime());
            String str=bp.getClass().toString();
            if("class passengerPlane".equals(str)) 
                tekInfo[1]="Пассажирский";
            else if ("class goodsPlane".equals(str)) 
                tekInfo[1]="Грузовой";
            else if ("class pleasurePlane".equals(str)) 
                tekInfo[1]="Прогулочный";
            else if ("class warPlane".equals(str)) 
                tekInfo[1]="Военный";
            textPlanes.add(new pole(tekInfo));
            }
        if (textPlanes.size()>0) jTable1.setModel(new ResultTableModel(colHeaders, textPlanes));
        else  {
            jScrollPane1.setVisible(false);
            jButtonAll.setVisible(false);
            jButtonGood.setVisible(false);
            jButtonPasseng.setVisible(false);
            jButtonWar.setVisible(false);
            jButtonPleasure.setVisible(false);
            jLabel5.setVisible(false);
            this.setSize(this.getWidth(), this.getHeight()/2-10);
            JOptionPane.showMessageDialog(null, "На этом аэропорту нет самолетов", "Отсутствие самолетов", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_formWindowOpened

    private void jButtonAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAllActionPerformed
        textPlanes = new Vector<pole>();
        String[] tekInfo = new String[colHeaders.length];
        for (basicPlane bp : parkingPlanes) {
            tekInfo[0]=bp.getName();
            tekInfo[2]=Integer.toString(bp.getWeight());
            tekInfo[3]=Integer.toString(bp.getStopTime());
            String str=bp.getClass().toString();
            if("class passengerPlane".equals(str)) 
                tekInfo[1]="Пассажирский";
            else if ("class goodsPlane".equals(str)) 
                tekInfo[1]="Грузовой";
            else if ("class pleasurePlane".equals(str)) 
                tekInfo[1]="Прогулочный";
            else if ("class warPlane".equals(str)) 
                tekInfo[1]="Военный";
            textPlanes.add(new pole(tekInfo));
            }
        if (textPlanes.size()>0) jTable1.setModel(new ResultTableModel(colHeaders, textPlanes));
        else JOptionPane.showMessageDialog(null, "На этом аэропорту нет самолетов", "Отсутствие самолетов", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_jButtonAllActionPerformed

    private void jButtonPassengActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPassengActionPerformed
        textPlanes = new Vector<pole>();
        String[] tekInfo = new String[colHeaders.length];
        for (basicPlane bp : parkingPlanes) {
            String str=bp.getClass().toString();
            if ("class passengerPlane".equals(str)) {
                tekInfo[0]=bp.getName();
                tekInfo[2]=Integer.toString(bp.getWeight());
                tekInfo[3]=Integer.toString(bp.getStopTime());
                tekInfo[1]="Пассажирский";
                textPlanes.add(new pole(tekInfo));
                }
            }
        if (textPlanes.size()>0) jTable1.setModel(new ResultTableModel(colHeaders, textPlanes));
        else JOptionPane.showMessageDialog(null, "Самолетов такого типа на этом аэропорту нет", "Отсутствие самолетов", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_jButtonPassengActionPerformed

    private void jButtonGoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGoodActionPerformed
        textPlanes = new Vector<pole>();
        String[] tekInfo = new String[colHeaders.length];
        for (basicPlane bp : parkingPlanes) {
            String str=bp.getClass().toString();
            if ("class goodsPlane".equals(str)) {
                tekInfo[0]=bp.getName();
                tekInfo[2]=Integer.toString(bp.getWeight());
                tekInfo[3]=Integer.toString(bp.getStopTime());
                tekInfo[1]="Грузовой";
                textPlanes.add(new pole(tekInfo));
                }
            }
        if (textPlanes.size()>0) jTable1.setModel(new ResultTableModel(colHeaders, textPlanes));
        else JOptionPane.showMessageDialog(null, "Самолетов такого типа на этом аэропорту нет", "Отсутствие самолетов", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_jButtonGoodActionPerformed

    private void jButtonWarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWarActionPerformed
        textPlanes = new Vector<pole>();
        String[] tekInfo = new String[colHeaders.length];
        for (basicPlane bp : parkingPlanes) {
            String str=bp.getClass().toString();
            if ("class warPlane".equals(str)) {
                tekInfo[0]=bp.getName();
                tekInfo[2]=Integer.toString(bp.getWeight());
                tekInfo[3]=Integer.toString(bp.getStopTime());
                tekInfo[1]="Военный";
                textPlanes.add(new pole(tekInfo));
                }
            }
        if (textPlanes.size()>0) jTable1.setModel(new ResultTableModel(colHeaders, textPlanes));
        else JOptionPane.showMessageDialog(null, "Самолетов такого типа на этом аэропорту нет", "Отсутствие самолетов", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_jButtonWarActionPerformed

    private void jButtonPleasureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPleasureActionPerformed
        textPlanes = new Vector<pole>();
        String[] tekInfo = new String[colHeaders.length];
        for (basicPlane bp : parkingPlanes) {
            String str=bp.getClass().toString();
            if ("class pleasurePlane".equals(str)) {
                tekInfo[0]=bp.getName();
                tekInfo[2]=Integer.toString(bp.getWeight());
                tekInfo[3]=Integer.toString(bp.getStopTime());
                tekInfo[1]="Прогулочный";
                textPlanes.add(new pole(tekInfo));
                }
            }
        if (textPlanes.size()>0) jTable1.setModel(new ResultTableModel(colHeaders, textPlanes));
        else JOptionPane.showMessageDialog(null, "Самолетов такого типа на этом аэропорту нет", "Отсутствие самолетов", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_jButtonPleasureActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[], airport curAirport) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(airportForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(airportForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(airportForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(airportForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(airport curAirport) {
                new airportForm(curAirport).setVisible(true);
            }
            public void run() {
                new airportForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAll;
    private javax.swing.JButton jButtonGood;
    private javax.swing.JButton jButtonPasseng;
    private javax.swing.JButton jButtonPleasure;
    private javax.swing.JButton jButtonWar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
