/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package main_frame;

import java.awt.Color;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import main_compare.DateCompare;
import main_сlasses.MusicIndustryWorker;

/**
 *
 * @author константин
 */
public class JDialogSelectMan extends javax.swing.JDialog {

/**
 * Creates new form JDialogSelectMan
 */
public JDialogSelectMan(java.awt.Frame parent, boolean modal,MusicIndustryWorker worker, ArrayList<MusicIndustryWorker> people) {
    super(parent, modal);
    initComponents();
    this.getContentPane().setBackground(Color.white);
    this.worker=worker;
    this.people=people;
    this.changingComponents();
}
private void changingComponents()
{
    DefaultTableCellRenderer r = (DefaultTableCellRenderer) this.jTablePeople.getDefaultRenderer(String.class);
    r.setHorizontalAlignment(JLabel.CENTER);
    r.setVerticalAlignment(JLabel.CENTER);
    r = (DefaultTableCellRenderer) this.jTablePeople.getTableHeader().getDefaultRenderer();
    r.setHorizontalAlignment(JLabel.CENTER);
    r.setVerticalAlignment(JLabel.CENTER);
}
/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePeople = new javax.swing.JTable();
        jFormattedTextFieldSearchName = new javax.swing.JFormattedTextField();
        jFormattedTextFieldSearchSurname = new javax.swing.JFormattedTextField();
        jButtonCancel = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("main_frame/Bundle"); // NOI18N
        setTitle(bundle.getString("JDialogSelectMan.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(500, 400));
        setModal(true);
        setResizable(false);
        addWindowListener(formListener);

        jTablePeople.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)));
        jTablePeople.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Имя", "Фамилия", "Дата рождения"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePeople.setFillsViewportHeight(true);
        jTablePeople.setGridColor(new java.awt.Color(51, 51, 51));
        jTablePeople.setRequestFocusEnabled(false);
        jTablePeople.setRowHeight(20);
        jTablePeople.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTablePeople.getTableHeader().setResizingAllowed(false);
        jTablePeople.getTableHeader().setReorderingAllowed(false);
        jTablePeople.addMouseListener(formListener);
        jScrollPane1.setViewportView(jTablePeople);

        jFormattedTextFieldSearchName.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)), bundle.getString("JDialogSelectMan.jFormattedTextFieldSearchName.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP)); // NOI18N
        try {
            jFormattedTextFieldSearchName.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("***************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldSearchName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextFieldSearchName.setAutoscrolls(false);
        jFormattedTextFieldSearchName.addKeyListener(formListener);

        jFormattedTextFieldSearchSurname.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)), bundle.getString("JDialogSelectMan.jFormattedTextFieldSearchSurname.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP)); // NOI18N
        try {
            jFormattedTextFieldSearchSurname.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("***************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldSearchSurname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextFieldSearchSurname.setAutoscrolls(false);
        jFormattedTextFieldSearchSurname.addKeyListener(formListener);

        jButtonCancel.setBackground(new java.awt.Color(255, 255, 255));
        jButtonCancel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButtonCancel.setText(bundle.getString("JDialogSelectMan.jButtonCancel.text")); // NOI18N
        jButtonCancel.setToolTipText(bundle.getString("JDialogSelectMan.jButtonCancel.toolTipText")); // NOI18N
        jButtonCancel.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)));
        jButtonCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonCancel.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jButtonCancel.setFocusable(false);
        jButtonCancel.setName("exit"); // NOI18N
        jButtonCancel.setRolloverEnabled(false);
        jButtonCancel.addMouseListener(formListener);
        jButtonCancel.addActionListener(formListener);

        jButtonAdd.setBackground(new java.awt.Color(255, 255, 255));
        jButtonAdd.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButtonAdd.setText(bundle.getString("JDialogSelectMan.jButtonAdd.text")); // NOI18N
        jButtonAdd.setToolTipText(bundle.getString("JDialogSelectMan.jButtonAdd.toolTipText")); // NOI18N
        jButtonAdd.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)));
        jButtonAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonAdd.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jButtonAdd.setFocusable(false);
        jButtonAdd.setName("exit"); // NOI18N
        jButtonAdd.setRolloverEnabled(false);
        jButtonAdd.addMouseListener(formListener);
        jButtonAdd.addActionListener(formListener);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jFormattedTextFieldSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jFormattedTextFieldSearchSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextFieldSearchSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener, java.awt.event.MouseListener, java.awt.event.WindowListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jButtonCancel) {
                JDialogSelectMan.this.jButtonCancelActionPerformed(evt);
            }
            else if (evt.getSource() == jButtonAdd) {
                JDialogSelectMan.this.jButtonAddActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == jFormattedTextFieldSearchName) {
                JDialogSelectMan.this.jFormattedTextFieldSearchNameKeyReleased(evt);
            }
            else if (evt.getSource() == jFormattedTextFieldSearchSurname) {
                JDialogSelectMan.this.jFormattedTextFieldSearchSurnameKeyReleased(evt);
            }
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == jTablePeople) {
                JDialogSelectMan.this.jTablePeopleMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == jButtonCancel) {
                JDialogSelectMan.this.jButtonCancelMouseEntered(evt);
            }
            else if (evt.getSource() == jButtonAdd) {
                JDialogSelectMan.this.jButtonAddMouseEntered(evt);
            }
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == jButtonCancel) {
                JDialogSelectMan.this.jButtonCancelMouseExited(evt);
            }
            else if (evt.getSource() == jButtonAdd) {
                JDialogSelectMan.this.jButtonAddMouseExited(evt);
            }
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }

        public void windowActivated(java.awt.event.WindowEvent evt) {
        }

        public void windowClosed(java.awt.event.WindowEvent evt) {
        }

        public void windowClosing(java.awt.event.WindowEvent evt) {
        }

        public void windowDeactivated(java.awt.event.WindowEvent evt) {
        }

        public void windowDeiconified(java.awt.event.WindowEvent evt) {
        }

        public void windowIconified(java.awt.event.WindowEvent evt) {
        }

        public void windowOpened(java.awt.event.WindowEvent evt) {
            if (evt.getSource() == JDialogSelectMan.this) {
                JDialogSelectMan.this.formWindowOpened(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
     if(this.people.size()!=0)
     {
        this.fillTable();
        this.jTablePeople.setRowSelectionInterval(0, 0);
     }
     else
     {
         this.jButtonAdd.setEnabled(false);
     }
    }//GEN-LAST:event_formWindowOpened

    private void jFormattedTextFieldSearchNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldSearchNameKeyReleased
        // TODO add your handling code here:
        if(this.people.size()!=0)
        {
            if(this.jFormattedTextFieldSearchName.getText().trim().equalsIgnoreCase("")==false)
            {
                int a=-1;
                for(int i=0;i<this.people.size();i++)
                {
                    if(this.people.get(i).getName().toLowerCase().indexOf(this.jFormattedTextFieldSearchName.getText().trim().toLowerCase())==0)
                    {
                        a=i;
                        break;
                    }
                }
                if(a==-1)
                {
                    int i=this.jTablePeople.getSelectedRow();
                    if(i!=-1)
                        this.jTablePeople.removeRowSelectionInterval(i, i);
                    this.jButtonAdd.setEnabled(false);
                    
                }
                else
                {
                    this.jTablePeople.setRowSelectionInterval(a, a);
                    this.jButtonAdd.setEnabled(true);
                }
            }
            else
            { 
                int i=this.jTablePeople.getSelectedRow();
                if(i!=-1)
                    this.jTablePeople.removeRowSelectionInterval(i, i);
                this.jButtonAdd.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jFormattedTextFieldSearchNameKeyReleased

    private void jFormattedTextFieldSearchSurnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldSearchSurnameKeyReleased
        // TODO add your handling code here:
        if(this.people.size()!=0)
        {
            if(this.jFormattedTextFieldSearchSurname.getText().trim().equalsIgnoreCase("")==false)
            {
                int a=-1;
                for(int i=0;i<this.people.size();i++)
                {
                    if(this.people.get(i).getSurname().toLowerCase().indexOf(this.jFormattedTextFieldSearchSurname.getText().trim().toLowerCase())==0)
                    {
                        a=i;
                        break;
                    }
                }
                if(a==-1)
                {
                    int i=this.jTablePeople.getSelectedRow();
                    if(i!=-1)
                        this.jTablePeople.removeRowSelectionInterval(i, i);
                    this.jButtonAdd.setEnabled(false);
                }
                else
                {
                    this.jTablePeople.setRowSelectionInterval(a, a);
                    this.jButtonAdd.setEnabled(true);
                }
            }
            else
            { 
                int i=this.jTablePeople.getSelectedRow();
                if(i!=-1)
                    this.jTablePeople.removeRowSelectionInterval(i, i);
                this.jButtonAdd.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jFormattedTextFieldSearchSurnameKeyReleased

    private void jButtonCancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelMouseEntered
        // TODO add your handling code here:
        this.jButtonCancel.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 255), new java.awt.Color(0, 0, 255)));
    }//GEN-LAST:event_jButtonCancelMouseEntered

    private void jButtonCancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelMouseExited
        // TODO add your handling code here:
        jButtonCancel.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)));
    }//GEN-LAST:event_jButtonCancelMouseExited

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddMouseEntered
        // TODO add your handling code here:
        this.jButtonAdd.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 255), new java.awt.Color(0, 0, 255)));
    }//GEN-LAST:event_jButtonAddMouseEntered

    private void jButtonAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddMouseExited
        // TODO add your handling code here:
        this.jButtonAdd.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)));
    }//GEN-LAST:event_jButtonAddMouseExited

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
             MusicIndustryWorker workerAdd=new MusicIndustryWorker(this.people.get(this.jTablePeople.getSelectedRow()));
             this.worker.setName(workerAdd.getName());
            this.worker.setSurname(workerAdd.getSurname());
            try {
                this.worker.setDate(workerAdd.getDate());
            } catch (ParseException ex) {
            } catch (IllegalArgumentException ex) {
            }
            this.worker.setSex(workerAdd.getSex());
            this.worker.setVoice(workerAdd.getVoice());
        this.setVisible(false);

    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTablePeopleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePeopleMouseClicked
        // TODO add your handling code here:
        if(this.jTablePeople.getSelectedRow()!=-1&&this.jButtonAdd.isEnabled()==false)
            this.jButtonAdd.setEnabled(true);  
    }//GEN-LAST:event_jTablePeopleMouseClicked
protected void fillTable()
{
    String[] str=new String[3]; 
    DefaultTableModel table=(DefaultTableModel) this.jTablePeople.getModel();
    for(MusicIndustryWorker v:this.people)
    {
        str[0]=v.getName();
        str[1]=v.getSurname();
        if(new DateCompare().compare(v.getDate(), "1.1.1")!=0)
            str[2]=v.getDate();
        else
            str[2]=" ";
        table.addRow(str);
    }
}
/**
 * @param args the command line arguments
 */
protected MusicIndustryWorker worker;//пременная полученая из родительской формы
protected ArrayList<MusicIndustryWorker> people;//список со всеми людьми
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JFormattedTextField jFormattedTextFieldSearchName;
    private javax.swing.JFormattedTextField jFormattedTextFieldSearchSurname;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePeople;
    // End of variables declaration//GEN-END:variables
}
